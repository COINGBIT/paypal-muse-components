/* @flow */
const getJetlore = () => {
    // code is being pulled from let JL = {};
    let JL = {}
    !(function() { function o(o) { const t = this; t.access_token = o.cid, t.user_id = void 0 !== o.user_id && o.user_id != null && o.user_id !== '' && o.user_id.indexOf('/') < 0 ? o.user_id : 'undefined', t.feed_id = void 0 === o.feed_id || o.feed_id == '' ? 'any_feed' : o.feed_id, t.div = o.div, t.lang = o.lang, t.clicked = typeof o.clicked === 'function' ? o.clicked : function(o) {}, t.purchased = typeof o.purchased === 'function' ? o.purchased : function(o) {}, t.logToConsoleCookieName = 'Tracker_log_to_console', t.logToConsole = e._isConsoleCookieExists(t.logToConsoleCookieName), t.setCookies = void 0 !== o.setCookies && o.setCookies != null && o.setCookies, t.autoPageView = void 0 !== o.autoPageView && typeof o.autoPageView === 'boolean' && o.autoPageView, t.log(`Tracking initialized with parameters\n\t - access token:${ t.access_token  }\n\t - user id     :${  t.user_id  }\n\t - feed id     :${  t.feed_id  }\n\t - div         :${  t.div  }\n\t - lang        :${  t.lang }`), t.autoPageView && t.page_view(); }JL = { tracking(e) { JL.tracker = new o(e); } }, o.prototype.track = function(o) { const e = this,
        t = o.event; e.log(`${ t } action initiated`), e.log(o); const i = t == 'search' ? e.convertTextData : e.convertDealData; e.performAction(i, t, o); }, o.prototype.view = function(o) { const e = this; e.log('Click action initiated'), e.performAction(e.convertDealData, e.a_click, o); }, o.prototype.click = function(o) { const e = this; e.log('Click action initiated'), e.performAction(e.convertDealData, e.a_click, o); }, o.prototype.purchase = function(o) { const e = this; e.log('Purchase action initiated'), e.performAction(e.convertDealData, e.a_purchase, o); }, o.prototype.addToCart = function(o) { const e = this; e.log('AddToCart action initiated'), e.performAction(e.convertDealData, e.a_add_to_cart, o); }, o.prototype.removeFromCart = function(o) { const e = this; e.log('RemoveFromCart action initiated'), e.performAction(e.convertDealData, e.a_remove_from_cart, o); }, o.prototype.addToWishList = function(o) { const e = this; e.log('AddToWishList action initiated'), e.performAction(e.convertDealData, e.a_add_to_wishlist, o); }, o.prototype.removeFromWishList = function(o) { const e = this; e.log('RemoveFromWishList action initiated'), e.performAction(e.convertDealData, e.a_remove_from_wishlist, o); }, o.prototype.addToFavorites = function(o) { const e = this; e.log('AddToFavorites action initiated'), e.performAction(e.convertDealData, e.a_add_to_favorites, o); }, o.prototype.removeFromFavorites = function(o) { const e = this; e.log('RemoveFromFavorites action initiated'), e.performAction(e.convertDealData, e.a_remove_from_favorites, o); }, o.prototype.browse_promo = function(o) { const e = this; e.log('BrowsePromo action initiated'), e.performAction(e.convertTextData, e.a_browse_promo, o); }, o.prototype.browse_catalog = function(o) { const e = this; e.log('BrowseCatalog action initiated'), e.performAction(e.convertTextData, e.a_browse_catalog, o); }, o.prototype.browse_section = function(o) { const e = this; e.log('BrowseSection action initiated'), e.performAction(e.convertBrowseSectionData, e.a_browse_section, o); }, o.prototype.search = function(o) { const e = this; e.log('Search action initiated'), e.performAction(e.convertTextData, e.a_search, o); }, o.prototype.page_view = function() { const o = this; o.log('Page view action initiated'), o.performAction(o.convertTextData, o.a_page_view, []); }, o.prototype.performAction = function(o, e, t) { const i = this; t ? t.constructor === Array ? i.action(o, e, t) : void 0 !== t.deal_id && t.deal_id != null && t.deal_id != '' || void 0 !== t.text && t.text != null && t.text != '' || void 0 !== t.id && t.id != null && t.id != '' || void 0 !== t.name && t.name != null && t.name != '' ? i.action(o, e, [ t ]) : i.log('Action skipped. Provided data object is not Array or does not have \'deal_id\' or \'text\' property') : i.log('Action skipped. No \'data\' provided'); }, o.prototype.urlQuery = function() { for (var o = {}, e = window.location.search.substring(1).split('&'), t = 0; t < e.length; t++) { const i = e[t].split('='); if (void 0 === o[i[0]]) { o[i[0]] = i[1]; } else if (typeof o[i[0]] === 'string') { const r = [ o[i[0]], i[1] ]; o[i[0]] = r; } else { o[i[0]].push(i[1]); } } return o; }, o.prototype.action = function(o, t, i) { const r = this,
        a = r.urlQuery(),
        n = `${ r.api_url  }/${  t  }/${  r.user_id }`,
        s = `${ typeof did !== 'undefined' ? `${ n  }/${  did }` : n  }?access_token=${  r.access_token  }&data=${  r.serialize(o, i)  }&feed=${  r.feed_id }`,
        c = void 0 !== r.div && r.div != '' ? `${ s  }&div=${  r.div }` : s,
        l = void 0 !== r.lang && r.lang != '' ? `${ c  }&lang=${  r.lang }` : c,
        d = a.jl_ctx,
        p = void 0 !== a.jl_labels && a.jl_labels != '' ? `${ l  }&jl_labels=${  a.jl_labels }` : l,
        _ = void 0 !== d && d != '' ? `${ p  }&jl_ctx=${  d }` : p,
        v = `${ void 0 !== r.setCookies && r.setCookies ? `${ _  }&set_cookies=${  r.setCookies }` : _  }&r_source=${  window.location.host  }${ window.location.pathname }`; r.log(`About to sent JSONP request: ${ v }`), e._jsonp(r, v); }, o.prototype.convertDealData = function(o) { for (var t, i = [], r = 0; r < o.length; r++) { t = {}, e._traverseObject(o[r], (e, i) => { switch (e) { case 'deal_id':t.pid = i; break; case 'count':t.count = typeof o[r].count === 'number' ? i : 1; break; default:t[e] = i; } }), i.push(t); } return i; }, o.prototype.convertBrowseSectionData = function(o) { for (var t = [], i = 0; i < o.length; i++) { const r = o[i],
        a = r.name,
        n = r.refinements,
        s = []; if (void 0 != n) { for (let c = 0; c < n.length; c++) { var l = {}; e._traverseObject(n[c], (o, e) => { l[o] = e; }), s.push(l); } }t.push({ name: a, refinements: s }); } return t; }, o.prototype.convertTextData = function(o) { return o; }, o.prototype.serialize = function(o, e) { const t = JSON.stringify(o(e)); return this.log(`Data object converted to string: ${ t }`), encodeURIComponent(t); }, o.prototype.enableLog = function() { this.logToConsole = !0, this.log('Stored enable log to console \'marker\' cookie. Will expire in 1800000 milliseconds'), e._setCookie(this.logToConsoleCookieName, (new Date()).getTime(), 18e5), this.log('JL logging Enabled'); }, o.prototype.disableLog = function() { const o = this; o.log('Removed enable log to console \'marker\' cookie'), o.logToConsole = !1, o.log('Stored enable log to console \'marker\' cookie. Will expire in -1800000 milliseconds'), e._setCookie(o.logToConsoleCookieName, (new Date()).getTime(), -18e5), o.log('JL logging Disabled'); }, o.prototype.log = function(o) { this.logToConsole && window.console && window.console.log && console.log(o); }; var e = { _traverseObject(o, e) { for (const t in o) { o.hasOwnProperty(t) && e(t, o[t]); } }, _deepCopyObject(o) { const e = {}; return this._traverseObject(o, (o, t) => { e[o] = t; }), e; }, _objectToQueryString(o) { let e = ''; return this._traverseObject(o, (o, t) => { const i = typeof t === 'object' ? JSON.stringify(t) : t; e += `${ encodeURIComponent(o)  }=${  encodeURIComponent(i)  }&`; }), e; }, _jsonp(o, e) { const t = document.createElement('script'); t.type = 'text/javascript', t.src = e, t.async = !0, document.getElementsByTagName('head')[0].appendChild(t), o.log(`SENT JSONP request: ${ e }`); }, _getUTCTime() { return new Date(this.getUTCFullYear(), this.getUTCMonth(), this.getUTCDate(), this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds()).getTime(); }, _getCookie(o) { for (let e = `${ o  }=`, t = document.cookie.split(';'), i = 0; i < t.length; i++) { for (var r = t[i]; r.charAt(0) === ' ';) { r = r.substring(1); } if (r.indexOf(e) === 0) { return r.substring(e.length, r.length); } } return ''; }, _setCookie(o, e, t) { const i = new Date(); i.setTime(i.getTime() + t); const r = `expires=${  i.toUTCString() }`; document.cookie = `${ o  }=${  e  }; Path=/; ${  r }`; }, _isConsoleCookieExists(o) { return e._getCookie(o) !== ''; } }; o.prototype.a_purchase = 'purch', o.prototype.a_click = 'click', o.prototype.a_add_to_cart = 'add_to_cart', o.prototype.a_remove_from_cart = 'remove_from_cart', o.prototype.a_add_to_wishlist = 'add_to_wishlist', o.prototype.a_remove_from_wishlist = 'remove_from_wishlist', o.prototype.a_add_to_favorites = 'add_to_favorites', o.prototype.a_remove_from_favorites = 'remove_from_favorites', o.prototype.a_browse_promo = 'browse_promo', o.prototype.a_browse_catalog = 'browse_catalog', o.prototype.a_browse_section = 'browse_section', o.prototype.api_url = 'https://api.jetlore.com/track', o.prototype.a_search = 'search', o.prototype.a_page_view = 'page_view'; }());
    return JL;
}

export default getJetlore();
